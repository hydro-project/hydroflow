---
source: hydroflow_plus_test_local/src/local/graph_reachability.rs
expression: "reachability.meta_graph().unwrap().to_mermaid(& Default :: default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>source_stream(roots)</code>"/]:::pullClass
2v1[\"(2v1) <code>chain()</code>"/]:::pullClass
3v1[/"(3v1) <code>tee()</code>"\]:::pushClass
4v1[/"<div style=text-align:center>(4v1)</div> <code>map(<br>    stageleft::runtime_support::fn1_type_hint::&lt;<br>        u32,<br>        (u32, ()),<br>    &gt;({<br>        use crate::__staged::local::graph_reachability::*;<br>        |r| (r, ())<br>    }),<br>)</code>"\]:::pushClass
5v1[\"(5v1) <code>source_stream(edges)</code>"/]:::pullClass
6v1[\"(6v1) <code>join_multiset::&lt;'tick, 'static&gt;()</code>"/]:::pullClass
7v1[\"<div style=text-align:center>(7v1)</div> <code>map(<br>    stageleft::runtime_support::fn1_type_hint::&lt;<br>        (u32, ((), u32)),<br>        u32,<br>    &gt;({<br>        use crate::__staged::local::graph_reachability::*;<br>        |(_from, (_, to))| to<br>    }),<br>)</code>"/]:::pullClass
8v1[\"(8v1) <code>chain()</code>"/]:::pullClass
9v1[\"(9v1) <code>defer_tick_lazy()</code>"/]:::pullClass
10v1[/"(10v1) <code>persist::&lt;'static&gt;()</code>"\]:::pushClass
11v1[/"(11v1) <code>unique::&lt;'tick&gt;()</code>"\]:::pushClass
12v1[/"(12v1) <code>multiset_delta()</code>"\]:::pushClass
13v1[/"<div style=text-align:center>(13v1)</div> <code>for_each(<br>    stageleft::runtime_support::fn1_type_hint::&lt;<br>        u32,<br>        (),<br>    &gt;({<br>        use crate::__staged::local::graph_reachability::*;<br>        let reached_out__free = reached_out;<br>        |v| {<br>            reached_out__free.send(v).unwrap();<br>        }<br>    }),<br>)</code>"\]:::pushClass
14v1["(14v1) <code>handoff</code>"]:::otherClass
15v1["(15v1) <code>handoff</code>"]:::otherClass
16v1["(16v1) <code>handoff</code>"]:::otherClass
17v1["(17v1) <code>handoff</code>"]:::otherClass
18v1[\"(18v1) <code>identity()</code>"/]:::pullClass
19v1["(19v1) <code>handoff</code>"]:::otherClass
20v1["(20v1) <code>handoff</code>"]:::otherClass
1v1-->14v1
9v1-->|1|2v1
2v1-->3v1
3v1-->4v1
4v1-->15v1
5v1-->20v1
6v1-->7v1
3v1-->16v1
7v1-->|1|8v1
8v1-->17v1
3v1-->10v1
10v1-->11v1
11v1-->12v1
12v1-->13v1
14v1--x|0|2v1; linkStyle 14 stroke:red
15v1-->|0|6v1
16v1--x|0|8v1; linkStyle 16 stroke:red
17v1-->18v1
18v1-->19v1
19v1--o9v1; linkStyle 19 stroke:red
20v1-->|1|6v1
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
    subgraph sg_1v1_var_stream_0 ["var <tt>stream_0</tt>"]
        1v1
    end
end
subgraph sg_2v1 ["sg_2v1 stratum 2"]
    6v1
    7v1
    8v1
    subgraph sg_2v1_var_stream_5 ["var <tt>stream_5</tt>"]
        6v1
    end
    subgraph sg_2v1_var_stream_6 ["var <tt>stream_6</tt>"]
        7v1
    end
    subgraph sg_2v1_var_stream_7 ["var <tt>stream_7</tt>"]
        8v1
    end
end
subgraph sg_3v1 ["sg_3v1 stratum 1"]
    9v1
    2v1
    3v1
    4v1
    10v1
    11v1
    12v1
    13v1
    subgraph sg_3v1_var_stream_1 ["var <tt>stream_1</tt>"]
        2v1
    end
    subgraph sg_3v1_var_stream_10 ["var <tt>stream_10</tt>"]
        11v1
    end
    subgraph sg_3v1_var_stream_11 ["var <tt>stream_11</tt>"]
        12v1
    end
    subgraph sg_3v1_var_stream_2 ["var <tt>stream_2</tt>"]
        3v1
    end
    subgraph sg_3v1_var_stream_3 ["var <tt>stream_3</tt>"]
        4v1
    end
    subgraph sg_3v1_var_stream_8 ["var <tt>stream_8</tt>"]
        9v1
    end
    subgraph sg_3v1_var_stream_9 ["var <tt>stream_9</tt>"]
        10v1
    end
end
subgraph sg_4v1 ["sg_4v1 stratum 3"]
    18v1
end
subgraph sg_5v1 ["sg_5v1 stratum 0"]
    5v1
    subgraph sg_5v1_var_stream_4 ["var <tt>stream_4</tt>"]
        5v1
    end
end
