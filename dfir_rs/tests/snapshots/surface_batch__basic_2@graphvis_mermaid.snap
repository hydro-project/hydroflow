---
source: hydroflow/tests/surface_batch.rs
expression: "df.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>defer_signal()</code>"/]:::pullClass
2v1[\"(2v1) <code>source_iter([1, 2, 3])</code>"/]:::pullClass
3v1[\"(3v1) <code>source_stream(signal_rx)</code>"/]:::pullClass
4v1[/"(4v1) <code>for_each(|x| egress_tx.send(x).unwrap())</code>"\]:::pushClass
5v1["(5v1) <code>handoff</code>"]:::otherClass
6v1["(6v1) <code>handoff</code>"]:::otherClass
2v1-->5v1
3v1-->6v1
1v1-->4v1
5v1--x|input|1v1; linkStyle 3 stroke:red
6v1--x|signal|1v1; linkStyle 4 stroke:red
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    2v1
end
subgraph sg_2v1 ["sg_2v1 stratum 0"]
    3v1
end
subgraph sg_3v1 ["sg_3v1 stratum 1"]
    1v1
    4v1
    subgraph sg_3v1_var_gate ["var <tt>gate</tt>"]
        1v1
    end
end

