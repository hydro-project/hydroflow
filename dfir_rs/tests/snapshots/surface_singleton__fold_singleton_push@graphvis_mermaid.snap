---
source: hydroflow/tests/surface_singleton.rs
expression: "df.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>source_iter(1..=10)</code>"/]:::pullClass
2v1[\"(2v1) <code>source_iter(3..=5)</code>"/]:::pullClass
3v1[/"(3v1) <code>fold(|| 0, |a, b| *a = std::cmp::max(*a, b))</code>"\]:::pushClass
4v1[\"(4v1) <code>persist::&lt;'static&gt;()</code>"/]:::pullClass
5v1[\"(5v1) <code>filter(|&amp;value| { value &lt;= max_of_stream2 })</code>"/]:::pullClass
6v1[\"(6v1) <code>map(|x| (context.current_tick(), x))</code>"/]:::pullClass
7v1[/"(7v1) <code>for_each(|x| filter_send.send(x).unwrap())</code>"\]:::pushClass
8v1["(8v1) <code>handoff</code>"]:::otherClass
2v1-->8v1
6v1-->7v1
5v1-->6v1
4v1-->5v1
1v1-->4v1
8v1--x3v1; linkStyle 5 stroke:red
3v1--x5v1; linkStyle 6 stroke:red
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    2v1
    subgraph sg_1v1_var_stream2 ["var <tt>stream2</tt>"]
        2v1
    end
end
subgraph sg_2v1 ["sg_2v1 stratum 1"]
    3v1
    subgraph sg_2v1_var_max_of_stream2 ["var <tt>max_of_stream2</tt>"]
        3v1
    end
end
subgraph sg_3v1 ["sg_3v1 stratum 2"]
    1v1
    4v1
    5v1
    6v1
    7v1
    subgraph sg_3v1_var_filtered_stream1 ["var <tt>filtered_stream1</tt>"]
        4v1
        5v1
        6v1
        7v1
    end
    subgraph sg_3v1_var_stream1 ["var <tt>stream1</tt>"]
        1v1
    end
end

