---
source: hydroflow/tests/surface_unique.rs
expression: "df.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>source_iter(0..10)</code>"/]:::pullClass
2v1[\"(2v1) <code>persist::&lt;'static&gt;()</code>"/]:::pullClass
3v1[\"(3v1) <code>source_iter(5..15)</code>"/]:::pullClass
4v1[\"(4v1) <code>persist::&lt;'static&gt;()</code>"/]:::pullClass
5v1[\"(5v1) <code>union()</code>"/]:::pullClass
6v1[\"(6v1) <code>unique::&lt;'static&gt;()</code>"/]:::pullClass
7v1[\"(7v1) <code>source_iter(0..0)</code>"/]:::pullClass
8v1[\"(8v1) <code>persist::&lt;'static&gt;()</code>"/]:::pullClass
9v1[\"(9v1) <code>union()</code>"/]:::pullClass
10v1[/"(10v1) <code>for_each(|v| out_send.send(v).unwrap())</code>"\]:::pushClass
2v1-->5v1
1v1-->2v1
4v1-->5v1
3v1-->4v1
6v1-->9v1
5v1-->6v1
8v1-->9v1
7v1-->8v1
9v1-->10v1
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
    2v1
    3v1
    4v1
    5v1
    6v1
    7v1
    8v1
    9v1
    10v1
    subgraph sg_1v1_var_m1 ["var <tt>m1</tt>"]
        5v1
        6v1
    end
    subgraph sg_1v1_var_m2 ["var <tt>m2</tt>"]
        9v1
        10v1
    end
end

