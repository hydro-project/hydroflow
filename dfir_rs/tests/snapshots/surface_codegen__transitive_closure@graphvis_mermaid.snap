---
source: hydroflow/tests/surface_codegen.rs
expression: "df.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>union()</code>"/]:::pullClass
2v1[/"(2v1) <code>tee()</code>"\]:::pushClass
3v1[/"(3v1) <code>tee()</code>"\]:::pushClass
4v1[\"(4v1) <code>source_stream(pairs_recv)</code>"/]:::pullClass
5v1[\"(5v1) <code>join::&lt;'static&gt;()</code>"/]:::pullClass
6v1[\"(6v1) <code>unique::&lt;'static&gt;()</code>"/]:::pullClass
7v1[\"(7v1) <code>map(|(a, k)| (k, a))</code>"/]:::pullClass
8v1[\"(8v1) <code>map(|(_k, (a, b))| (a, b))</code>"/]:::pullClass
9v1[/"(9v1) <code>for_each(|(a, b)| out_send.send((a, b)).unwrap())</code>"\]:::pushClass
10v1["(10v1) <code>handoff</code>"]:::otherClass
11v1["(11v1) <code>handoff</code>"]:::otherClass
12v1["(12v1) <code>handoff</code>"]:::otherClass
1v1-->2v1
4v1-->3v1
3v1-->|0|10v1
5v1-->6v1
7v1-->|0|5v1
2v1-->|0|11v1
3v1-->|1|12v1
8v1-->|1|1v1
6v1-->8v1
2v1-->|1|9v1
10v1-->|0|1v1
11v1-->7v1
12v1-->|1|5v1
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    4v1
    3v1
    subgraph sg_1v1_var_link_tee ["var <tt>link_tee</tt>"]
        3v1
    end
end
subgraph sg_2v1 ["sg_2v1 stratum 0"]
    11v1
    7v1
    5v1
    6v1
    8v1
    1v1
    2v1
    9v1
    subgraph sg_2v1_var_edge_union_tee ["var <tt>edge_union_tee</tt>"]
        1v1
        2v1
    end
    subgraph sg_2v1_var_the_join ["var <tt>the_join</tt>"]
        5v1
        6v1
    end
end

