---
source: hydroflow/tests/surface_fold_keyed.rs
expression: "df.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"<div style=text-align:center>(1v1)</div> <code>source_iter([<br>    SubordResponse {<br>        xid: &quot;123&quot;,<br>        mtype: 33,<br>    },<br>    SubordResponse {<br>        xid: &quot;123&quot;,<br>        mtype: 52,<br>    },<br>    SubordResponse {<br>        xid: &quot;123&quot;,<br>        mtype: 72,<br>    },<br>    SubordResponse {<br>        xid: &quot;123&quot;,<br>        mtype: 83,<br>    },<br>    SubordResponse {<br>        xid: &quot;123&quot;,<br>        mtype: 78,<br>    },<br>])</code>"/]:::pullClass
2v1[\"(2v1) <code>map(|m: SubordResponse| (m.xid, m.mtype))</code>"/]:::pullClass
3v1[\"(3v1) <code>fold_keyed::&lt;'static&gt;(|| 0, |old: &amp;mut u32, val: u32| *old += val)</code>"/]:::pullClass
4v1[/"(4v1) <code>for_each(|kv| result_send.send(kv).unwrap())</code>"\]:::pushClass
5v1["(5v1) <code>handoff</code>"]:::otherClass
3v1-->4v1
2v1-->5v1
1v1-->2v1
5v1--x3v1; linkStyle 3 stroke:red
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
    2v1
end
subgraph sg_2v1 ["sg_2v1 stratum 1"]
    3v1
    4v1
end

