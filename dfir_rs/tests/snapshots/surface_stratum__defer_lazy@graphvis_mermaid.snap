---
source: hydroflow/tests/surface_stratum.rs
expression: "df.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>union()</code>"/]:::pullClass
2v1[/"(2v1) <code>tee()</code>"\]:::pushClass
3v1[\"(3v1) <code>source_iter([1, 3])</code>"/]:::pullClass
4v1[\"(4v1) <code>defer_tick_lazy()</code>"/]:::pullClass
5v1[\"(5v1) <code>map(|x| 2 * x)</code>"/]:::pullClass
6v1[/"(6v1) <code>for_each(|x| output_inner.borrow_mut().push(x))</code>"\]:::pushClass
7v1["(7v1) <code>handoff</code>"]:::otherClass
8v1["(8v1) <code>handoff</code>"]:::otherClass
9v1[\"(9v1) <code>identity()</code>"/]:::pullClass
10v1["(10v1) <code>handoff</code>"]:::otherClass
1v1-->2v1
3v1-->|0|1v1
5v1-->|1|1v1
4v1-->7v1
2v1-->|0|8v1
2v1-->|1|6v1
7v1-->5v1
8v1-->9v1
9v1-->10v1
10v1--o4v1; linkStyle 9 stroke:red
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    4v1
end
subgraph sg_2v1 ["sg_2v1 stratum 0"]
    3v1
    5v1
    1v1
    2v1
    6v1
    subgraph sg_2v1_var_a ["var <tt>a</tt>"]
        1v1
        2v1
    end
end
subgraph sg_3v1 ["sg_3v1 stratum 1"]
    9v1
end

