---
source: hydroflow/tests/surface_python.rs
expression: "hf.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>source_iter([(5,)])</code>"/]:::pullClass
2v1[\"<div style=text-align:center>(2v1)</div> <code>py_udf(&quot;<br>def add(a, b):<br>return a + b<br>&quot;, &quot;add&quot;)</code>"/]:::pullClass
3v1[\"(3v1) <code>map(PyResult::&lt;Py&lt;PyAny&gt;&gt;::unwrap_err)</code>"/]:::pullClass
4v1[\"(4v1) <code>map(|py_err| py_err.to_string())</code>"/]:::pullClass
5v1[/"(5v1) <code>assert_eq([&quot;TypeError: add() missing 1 required positional argument: 'b'&quot;])</code>"\]:::pushClass
4v1-->5v1
3v1-->4v1
2v1-->3v1
1v1-->2v1
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
    2v1
    3v1
    4v1
    5v1
end

