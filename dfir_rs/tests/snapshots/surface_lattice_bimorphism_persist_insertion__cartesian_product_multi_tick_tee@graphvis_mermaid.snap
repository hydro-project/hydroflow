---
source: hydroflow/tests/surface_lattice_bimorphism_persist_insertion.rs
expression: "df.meta_graph().unwrap().to_mermaid(& Default :: default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>source_stream(lhs_recv)</code>"/]:::pullClass
2v1[\"(2v1) <code>map(SetUnionSingletonSet::new_from)</code>"/]:::pullClass
3v1[\"(3v1) <code>state::&lt;'static, SetUnionHashSet&lt;u32&gt;&gt;()</code>"/]:::pullClass
4v1[\"(4v1) <code>source_stream(rhs_recv)</code>"/]:::pullClass
5v1[\"(5v1) <code>map(SetUnionSingletonSet::new_from)</code>"/]:::pullClass
6v1[\"(6v1) <code>state::&lt;'static, SetUnionHashSet&lt;u32&gt;&gt;()</code>"/]:::pullClass
7v1[/"(7v1) <code>tee()</code>"\]:::pushClass
8v1[/"(8v1) <code>for_each(|x| println!(&quot;tee: {:?}&quot;, x))</code>"\]:::pushClass
9v1[\"(9v1) <code>lattice_bimorphism(CartesianProductBimorphism::&lt;HashSet&lt;_&gt;&gt;::default(), lhs, rhs)</code>"/]:::pullClass
10v1[\"(10v1) <code>lattice_reduce()</code>"/]:::pullClass
11v1[/"(11v1) <code>for_each(|x| out_send.send(x).unwrap())</code>"\]:::pushClass
12v1["(12v1) <code>handoff</code>"]:::otherClass
13v1["(13v1) <code>handoff</code>"]:::otherClass
14v1["(14v1) <code>handoff</code>"]:::otherClass
2v1-->3v1
1v1-->2v1
5v1-->6v1
4v1-->5v1
6v1-->7v1
7v1-->8v1
3v1-->12v1
7v1-->13v1
10v1-->11v1
9v1-->14v1
12v1-->|0|9v1
13v1-->|1|9v1
14v1-->10v1; linkStyle 12 stroke:#060
3v1--x9v1; linkStyle 13 stroke:red
6v1--x9v1; linkStyle 14 stroke:red
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
    2v1
    3v1
    subgraph sg_1v1_var_lhs ["var <tt>lhs</tt>"]
        1v1
        2v1
        3v1
    end
end
subgraph sg_2v1 ["sg_2v1 stratum 0"]
    4v1
    5v1
    6v1
    7v1
    8v1
    subgraph sg_2v1_var_rhs ["var <tt>rhs</tt>"]
        4v1
        5v1
        6v1
    end
    subgraph sg_2v1_var_rhs_tee ["var <tt>rhs_tee</tt>"]
        7v1
    end
end
subgraph sg_3v1 ["sg_3v1 stratum 1"]
    9v1
    subgraph sg_3v1_var_my_join ["var <tt>my_join</tt>"]
        9v1
    end
end
subgraph sg_4v1 ["sg_4v1 stratum 1"]
    10v1
    11v1
    subgraph sg_4v1_var_my_join ["var <tt>my_join</tt>"]
        10v1
        11v1
    end
end

