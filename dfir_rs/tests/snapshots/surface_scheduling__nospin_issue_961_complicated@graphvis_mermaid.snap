---
source: hydroflow/tests/surface_scheduling.rs
expression: "df.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>source_iter([1])</code>"/]:::pullClass
2v1[\"(2v1) <code>union()</code>"/]:::pullClass
3v1[\"(3v1) <code>persist::&lt;'static&gt;()</code>"/]:::pullClass
4v1[\"(4v1) <code>fold(|| 0, |accum, x| *accum += x)</code>"/]:::pullClass
5v1[\"(5v1) <code>defer_tick_lazy()</code>"/]:::pullClass
6v1[\"(6v1) <code>filter(|_| false)</code>"/]:::pullClass
7v1[/"(7v1) <code>tee()</code>"\]:::pushClass
8v1[/"(8v1) <code>null()</code>"\]:::pushClass
9v1["(9v1) <code>handoff</code>"]:::otherClass
10v1["(10v1) <code>handoff</code>"]:::otherClass
11v1["(11v1) <code>handoff</code>"]:::otherClass
12v1[\"(12v1) <code>identity()</code>"/]:::pullClass
13v1["(13v1) <code>handoff</code>"]:::otherClass
1v1-->2v1
6v1-->7v1
5v1-->6v1
4v1-->9v1
3v1-->10v1
2v1-->3v1
7v1-->8v1
7v1-->11v1
9v1-->12v1
10v1--x4v1; linkStyle 9 stroke:red
11v1-->2v1
12v1-->13v1
13v1--o5v1; linkStyle 12 stroke:red
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
    2v1
    3v1
    subgraph sg_1v1_var_double ["var <tt>double</tt>"]
        3v1
    end
    subgraph sg_1v1_var_items ["var <tt>items</tt>"]
        2v1
    end
end
subgraph sg_2v1 ["sg_2v1 stratum 1"]
    4v1
    subgraph sg_2v1_var_double ["var <tt>double</tt>"]
        4v1
    end
end
subgraph sg_3v1 ["sg_3v1 stratum 0"]
    5v1
    6v1
    7v1
    8v1
    subgraph sg_3v1_var_double ["var <tt>double</tt>"]
        5v1
        6v1
        7v1
    end
end
subgraph sg_4v1 ["sg_4v1 stratum 2"]
    12v1
end

