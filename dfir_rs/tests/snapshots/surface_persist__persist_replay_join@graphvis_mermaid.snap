---
source: hydroflow/tests/surface_persist.rs
expression: "hf.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>source_stream(persist_input)</code>"/]:::pullClass
2v1[\"(2v1) <code>persist::&lt;'static&gt;()</code>"/]:::pullClass
3v1[\"(3v1) <code>fold::&lt;'tick&gt;(|| 0, |a: &amp;mut _, b| *a += b)</code>"/]:::pullClass
4v1[\"(4v1) <code>next_stratum()</code>"/]:::pullClass
5v1[\"(5v1) <code>source_stream(other_input)</code>"/]:::pullClass
6v1[\"(6v1) <code>cross_join::&lt;'tick, 'tick&gt;()</code>"/]:::pullClass
7v1[/"(7v1) <code>for_each(|x| result_send.send(x).unwrap())</code>"\]:::pushClass
8v1["(8v1) <code>handoff</code>"]:::otherClass
9v1["(9v1) <code>handoff</code>"]:::otherClass
10v1["(10v1) <code>handoff</code>"]:::otherClass
4v1-->|0|6v1
3v1-->8v1
2v1-->9v1
1v1-->2v1
5v1-->10v1
6v1-->7v1
8v1--x4v1; linkStyle 6 stroke:red
9v1--x3v1; linkStyle 7 stroke:red
10v1-->|1|6v1
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
    2v1
end
subgraph sg_2v1 ["sg_2v1 stratum 1"]
    3v1
end
subgraph sg_3v1 ["sg_3v1 stratum 2"]
    4v1
    6v1
    7v1
    subgraph sg_3v1_var_product_node ["var <tt>product_node</tt>"]
        6v1
        7v1
    end
end
subgraph sg_4v1 ["sg_4v1 stratum 0"]
    5v1
end

