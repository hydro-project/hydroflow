---
source: hydroflow/tests/surface_reduce.rs
expression: "df.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>union()</code>"/]:::pullClass
2v1[\"(2v1) <code>map(|v| (v, ()))</code>"/]:::pullClass
3v1[\"(3v1) <code>source_iter(vec![0])</code>"/]:::pullClass
4v1[\"(4v1) <code>join()</code>"/]:::pullClass
5v1[\"(5v1) <code>map(|(_src, ((), dst))| dst)</code>"/]:::pullClass
6v1[/"(6v1) <code>tee()</code>"\]:::pushClass
7v1[\"(7v1) <code>source_stream(pairs_recv)</code>"/]:::pullClass
8v1[\"(8v1) <code>reduce(|a: &amp;mut _, b| *a += b)</code>"/]:::pullClass
9v1[/"(9v1) <code>for_each(|sum| println!(&quot;{}&quot;, sum))</code>"\]:::pushClass
10v1["(10v1) <code>handoff</code>"]:::otherClass
11v1["(11v1) <code>handoff</code>"]:::otherClass
1v1-->2v1
3v1-->|0|1v1
5v1-->6v1
4v1-->5v1
2v1-->|0|4v1
7v1-->|1|4v1
6v1-->|0|10v1
8v1-->9v1
6v1-->|1|11v1
10v1-->|1|1v1
11v1--x8v1; linkStyle 10 stroke:red
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    10v1
    3v1
    1v1
    2v1
    7v1
    4v1
    5v1
    6v1
    subgraph sg_1v1_var_my_join_tee ["var <tt>my_join_tee</tt>"]
        4v1
        5v1
        6v1
    end
    subgraph sg_1v1_var_reached_vertices ["var <tt>reached_vertices</tt>"]
        1v1
        2v1
    end
end
subgraph sg_2v1 ["sg_2v1 stratum 1"]
    8v1
    9v1
end

