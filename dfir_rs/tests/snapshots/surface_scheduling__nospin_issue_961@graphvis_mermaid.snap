---
source: hydroflow/tests/surface_scheduling.rs
expression: "df.meta_graph().unwrap().to_mermaid(&Default::default())"
---
%%{init:{'theme':'base','themeVariables':{'clusterBkg':'#ddd','clusterBorder':'#888'}}}%%
flowchart TD
classDef pullClass fill:#8af,stroke:#000,text-align:left,white-space:pre
classDef pushClass fill:#ff8,stroke:#000,text-align:left,white-space:pre
classDef otherClass fill:#fdc,stroke:#000,text-align:left,white-space:pre
linkStyle default stroke:#aaa
1v1[\"(1v1) <code>source_iter([1])</code>"/]:::pullClass
2v1[\"(2v1) <code>next_stratum()</code>"/]:::pullClass
3v1[\"(3v1) <code>persist::&lt;'static&gt;()</code>"/]:::pullClass
4v1[\"(4v1) <code>defer_tick_lazy()</code>"/]:::pullClass
5v1[/"(5v1) <code>null()</code>"\]:::pushClass
6v1["(6v1) <code>handoff</code>"]:::otherClass
7v1["(7v1) <code>handoff</code>"]:::otherClass
8v1["(8v1) <code>handoff</code>"]:::otherClass
9v1[\"(9v1) <code>identity()</code>"/]:::pullClass
10v1["(10v1) <code>handoff</code>"]:::otherClass
4v1-->5v1
3v1-->6v1
2v1-->7v1
1v1-->8v1
6v1-->9v1
7v1-->3v1
8v1--x2v1; linkStyle 6 stroke:red
9v1-->10v1
10v1--o4v1; linkStyle 8 stroke:red
subgraph sg_1v1 ["sg_1v1 stratum 0"]
    1v1
end
subgraph sg_2v1 ["sg_2v1 stratum 1"]
    2v1
end
subgraph sg_3v1 ["sg_3v1 stratum 1"]
    3v1
end
subgraph sg_4v1 ["sg_4v1 stratum 0"]
    4v1
    5v1
end
subgraph sg_5v1 ["sg_5v1 stratum 2"]
    9v1
end

